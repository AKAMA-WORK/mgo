import { useEffect, useState } from "react";
import Text from "../typography/Text";
import { useInterval } from "./useInterval";

const DELAY: number = 1000;

const getTimeFromSeconds = (totalSeconds?: number) => {
    if (!totalSeconds) {
        return {
            minutes: 0,
            seconds: 0
        }
    }

    const minutes = Math.floor((totalSeconds % (60 * 60)) / 60);
    const seconds = Math.floor(totalSeconds % 60);

    return {
        minutes,
        seconds
    }
}

const PaymentTimer = ({ waitConfirmIn, onTimeElapsed }: { waitConfirmIn: number, onTimeElapsed: () => void }) => {
    const [remaining, setRemaining] = useState<number>();

    useEffect(() => {
        if (waitConfirmIn > 0) {
            setRemaining(waitConfirmIn)
        }
        else {
            onTimeElapsed();
        }
    }, [waitConfirmIn])

    useInterval(() => {
        setRemaining(prev => {
            return (prev || 0) - 1;
        })
    }, remaining != undefined && remaining > 0 ? DELAY : undefined);

    useEffect(() => {
        if (remaining != undefined && remaining <= 0) {
            onTimeElapsed();
        }
    }, [remaining])


    const time = getTimeFromSeconds(remaining);
    return (
        <div className="app-payment-timer">
            <div>
                <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clipPath="url(#clip0_328_5702)">
                        <path d="M23.4667 25.9883H8.53334C7.97293 25.9889 7.42224 25.842 6.93665 25.5622C6.45106 25.2824 6.0477 24.8798 5.76714 24.3946C5.48657 23.9095 5.33869 23.3591 5.33838 22.7987C5.33806 22.2382 5.48532 21.6876 5.76534 21.2022L13.232 8.26245C13.5121 7.77736 13.915 7.37455 14.4001 7.09449C14.8853 6.81443 15.4356 6.66699 15.9957 6.66699C16.5559 6.66699 17.1062 6.81443 17.5913 7.09449C18.0765 7.37455 18.4793 7.77736 18.7595 8.26245L26.2261 21.2022C26.5058 21.687 26.653 22.2368 26.6531 22.7965C26.6532 23.3562 26.506 23.9061 26.2265 24.3909C25.9469 24.8758 25.5448 25.2786 25.0604 25.559C24.576 25.8394 24.0264 25.9874 23.4667 25.9883Z" fill="#F4CB4A" />
                        <path d="M16 8.26215C16.2815 8.2582 16.5589 8.33022 16.8029 8.47063C17.047 8.61104 17.2486 8.81465 17.3867 9.06002L24.8533 21.9998C24.992 22.2429 25.0644 22.5181 25.0634 22.7979C25.0624 23.0778 24.9881 23.3525 24.8477 23.5946C24.7074 23.8367 24.506 24.0378 24.2637 24.1778C24.0213 24.3178 23.7465 24.3917 23.4667 24.3923H8.53334C8.25349 24.3917 7.97868 24.3178 7.73635 24.1778C7.49401 24.0378 7.29263 23.8367 7.1523 23.5946C7.01197 23.3525 6.9376 23.0778 6.93661 22.7979C6.93562 22.5181 7.00806 22.2429 7.14668 21.9998L14.6133 9.06002C14.7514 8.81465 14.9531 8.61104 15.1971 8.47063C15.4411 8.33022 15.7185 8.2582 16 8.26215ZM16 6.66215C15.4387 6.65932 14.8869 6.80606 14.4011 7.08727C13.9154 7.36848 13.5133 7.77401 13.2363 8.26215L5.76961 21.2019C5.48977 21.687 5.34252 22.2372 5.34265 22.7973C5.34278 23.3573 5.49028 23.9075 5.77034 24.3925C6.0504 24.8775 6.45316 25.2802 6.93815 25.5603C7.42314 25.8404 7.9733 25.9879 8.53334 25.988H23.4667C24.0275 25.9896 24.5789 25.8433 25.0652 25.5639C25.5516 25.2845 25.9557 24.8819 26.2369 24.3966C26.5181 23.9114 26.6664 23.3605 26.667 22.7997C26.6675 22.2388 26.5203 21.6877 26.24 21.2019L18.7733 8.26215C18.4944 7.77417 18.0904 7.36943 17.6029 7.08968C17.1154 6.80992 16.5621 6.66529 16 6.67068V6.66215ZM14.6133 21.1443C14.6133 20.4083 15.1904 19.8589 16 19.8589C16.8096 19.8589 17.3867 20.4083 17.3867 21.1443C17.3867 21.8803 16.8085 22.4574 16 22.4574C15.1915 22.4574 14.6133 21.8654 14.6133 21.1443ZM15.2203 12.2387H16.7797C16.8518 12.2387 16.923 12.2535 16.9891 12.2821C17.0552 12.3108 17.1147 12.3527 17.1639 12.4053C17.2131 12.4579 17.251 12.5201 17.2752 12.5879C17.2994 12.6558 17.3094 12.7279 17.3045 12.7997L16.928 18.3464C16.9193 18.4796 16.8602 18.6045 16.7627 18.6956C16.6652 18.7868 16.5367 18.8374 16.4032 18.8371H15.5968C15.4633 18.8374 15.3348 18.7868 15.2373 18.6956C15.1398 18.6045 15.0807 18.4796 15.072 18.3464L14.6955 12.7997C14.6907 12.7279 14.7007 12.6558 14.7248 12.5879C14.749 12.5201 14.7869 12.4579 14.8361 12.4053C14.8853 12.3527 14.9448 12.3108 15.0109 12.2821C15.077 12.2535 15.1482 12.2387 15.2203 12.2387Z" fill="#3A3A3A" />
                    </g>
                    <defs>
                        <clipPath id="clip0_328_5702">
                            <rect width="21.3333" height="19.3216" fill="white" transform="translate(5.33337 6.6665)" />
                        </clipPath>
                    </defs>
                </svg>
            </div>
            <Text> Votre réservation sera réinitialisée dans <strong>{time.minutes} minute(s) {time.seconds} seconde(s)</strong></Text>

        </div>
    )

}

export default PaymentTimer;